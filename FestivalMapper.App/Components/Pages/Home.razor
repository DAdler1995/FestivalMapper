@page "/"

@using FestivalMapper.App.Components.Festival
@using FestivalMapper.App.Components.Home
@using FestivalMapper.App.Components.Layout
@using FestivalMapper.App.Interfaces
@using FestivalMapper.App.Models
@using FestivalMapper.App.Models.ViewModels
@using FestivalMapper.App.Services

<section class="p-3">
    <div class="d-flex align-items-center mb-2">
        <h1>Welcome to <span class="text-primary">Festival Mapper</span>!</h1>
    </div>
    <div>
        <p class="text-muted">The #1 app for keeping track and planning your festival experience regardless of internet connection.</p>
    </div>
</section>

@if (_loading)
{
    <div class="spinner-grow" role="status"><span class="text-primary">Loading…</span></div>
}
else
{
    <FestivalList UpcomingFestivals="_upcoming" PastFestivals="_past" OnShare="ShareFestival" />
}

@code {

    // inject
    [Inject] private IFestivalService FestivalService { get; set; } = default;

    // variables
    private bool _loading = true;
    private IReadOnlyList<FestivalListItem> _upcoming = [];
    private IReadOnlyList<FestivalListItem> _past = [];



    protected override async Task OnInitializedAsync()
    {
        var (upcoming, past) = await FestivalService.GetFestivalListsAsync();
        _upcoming = upcoming;
        _past = past;

        _loading = false;
    }


    List<FestivalListItem> Festivals = new()
    {
        new(Guid.NewGuid(), "EDC", new DateOnly(2025, 5, 15), new DateOnly(2025, 5, 17), "Las Vegas", "NV"),
        new(Guid.NewGuid(), "Nocturnal Wonderland", new DateOnly(2025, 9, 13), new DateOnly(2025, 9, 14), "San Bernardino", "CA"),
        new(Guid.NewGuid(), "Escape Wonderland", new DateOnly(2025, 10, 31), new DateOnly(2025, 11, 1), "San Bernardino", "CA"),
        new(Guid.NewGuid(), "Wasteland", new DateOnly(2025, 8, 29), new DateOnly(2025, 8, 30), "San Bernardino", "CA"),
        new(Guid.NewGuid(), "Countdown", new DateOnly(2025, 12, 31), new DateOnly(2026, 1, 1), "Los Angeles", "CA")
    };


    Task ShareFestival(Guid Id)
    {
        // TODO: open share dialog / copy link
        return Task.CompletedTask;
    }
}
