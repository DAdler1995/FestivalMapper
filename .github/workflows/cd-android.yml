name: Android Publish

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: true
        type: string
      dotnet-version-target:
        required: true
        type: string
      #xcode-version:
      #  required: true
      #  type: string
      project-file:
        required: true
        type: string
      project-folder:
        required: true
        type: string
      build-config:
        required: true
        type: string
      build-version:
        required: true
        type: string
    secrets:      
      keystore-password:
        required: true
      keystore-alias:
        required: true
      keystore:
        required: true
      #playstore-service-account:
      #  required: true

jobs:
  publish-android:
    runs-on: windows-latest
    name: Android Publish

    env:
      ARTIFACT_DIR: ${{ github.workspace }}\artifacts\android

    steps:
        - name: Setup .NET ${{ inputs.dotnet-version }}
          uses: actions/setup-dotnet@v2
          with:
            dotnet-version: ${{ inputs.dotnet-version }}
      
        - uses: actions/checkout@v3
          name: Checkout the code
      
        # This step might be obsolete at some point as .NET MAUI workloads 
        # are starting to come pre-installed on the GH Actions build agents.
        - name: Install MAUI Workload
          run: dotnet workload install maui --ignore-failed-sources
      
        - name: Restore Dependencies
          run: dotnet restore ${{ inputs.project-file }}

        - name: Version the app
          id: version
          shell: pwsh
          run: |
            $ErrorActionPreference = 'Stop'
            $csproj = Join-Path "${{ github.workspace }}" "${{ inputs.project-file }}"
            $content = Get-Content $csproj -Raw
  
            # Try to pull an explicit version from the csproj
            $display = $null
            if ($content -match '<ApplicationDisplayVersion>\s*([^<]+)\s*</ApplicationDisplayVersion>') {
              $display = $Matches[1].Trim()
            } elseif ($content -match '<Version>\s*([^<]+)\s*</Version>') {
              $display = $Matches[1].Trim()
            }
  
            # If a tag like v1.2.3 triggered this, prefer it
            $refName = "${{ github.ref_name }}"
            if ($refName -match '^v\d+\.\d+(\.\d+)?$') {
              $display = $refName.TrimStart('v')
            }
  
            if ([string]::IsNullOrWhiteSpace($display)) {
              # Ultimate fallback: 0.0.(run)
              $display = "0.0.${{ github.run_number }}"
            }
  
            # Convert displayVersion to a monotonically increasing integer for ApplicationVersion
            # e.g. 1.2.3 => 1002003 (naive scheme)
            $parts = ($display -split '\.')
            while ($parts.Count -lt 3) { $parts += '0' }
            $major = [int]$parts[0]; $minor = [int]$parts[1]; $patch = [int]$parts[2]
            $buildVersion = ($major * 1000000) + ($minor * 1000) + $patch
  
            "displayVersion=$display"       | Out-File -FilePath $env:GITHUB_OUTPUT -Append
            "buildVersion=$buildVersion"    | Out-File -FilePath $env:GITHUB_OUTPUT -Append
  
            Write-Host "Resolved displayVersion=$display"
            Write-Host "Resolved buildVersion=$buildVersion"

        # write keystore from secret (base64)
        - name: Write Android keystore from secret
          id: write_keystore
          uses: timheuer/base64-to-file@v1
          with:
            fileDir: '${{ github.workspace }}\${{ inputs.project-folder }}'
            fileName: 'ourkeystore.jks'
            encodedString: ${{ secrets.keystore }}

        # publish signed APK
        - name: Publish MAUI Android APK
          run: >
            dotnet publish "${{ inputs.project-file }}"
            -c "${{ inputs.build-config }}"
            -f net9.0-android
            -o "${{ github.workspace }}\artifacts\android"
            /p:AndroidKeyStore=true
            /p:AndroidSigningKeyStore="${{ steps.write_keystore.outputs.filePath }}"
            /p:AndroidSigningKeyAlias="${{ secrets.keystore-alias }}"
            /p:AndroidSigningKeyPass="${{ secrets.keystore-password }}"
            /p:AndroidSigningStorePass="${{ secrets.keystore-password }}"
            /p:AndroidPackageFormat=apk
            --no-restore

        - name: Upload Android artifact
          uses: actions/upload-artifact@v4
          with:
            name: android-${{ steps.version.outputs.displayVersion }}
            path: |
              ${{ env.ARTIFACT_DIR }}\*.apk
              ${{ env.ARTIFACT_DIR }}\*.aab
            if-no-files-found: warn
            retention-days: 14
  
        - name: Create GitHub Release (v${{ steps.version.outputs.displayVersion }})
          uses: softprops/action-gh-release@v2
          with:
            tag_name: v${{ steps.version.outputs.displayVersion }}
            name: Release v${{ steps.version.outputs.displayVersion }}
            generate_release_notes: true
            draft: false
            prerelease: false
            files: |
              ${{ env.ARTIFACT_DIR }}\*.apk
              ${{ env.ARTIFACT_DIR }}\*.aab
