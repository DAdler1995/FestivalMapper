name: Android CI (Signed APK)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-android:
    # macOS is the most reliable hosted runner for MAUI Android
    runs-on: macos-14

    env:
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      
      MAUI_PROJECT: FestivalMapper.App/FestivalMapper.App.csproj

      # Output folder for published artifacts
      PUBLISH_DIR: ${{ github.workspace }}/publish-android

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 9.x SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Dotnet info
        run: dotnet --info

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ${{ env.NUGET_PACKAGES }}
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore NuGet
        run: dotnet restore "$MAUI_PROJECT"

      - name: Install MAUI Android workload
        run: |
          dotnet workload restore
          dotnet workload install maui-android

      # Android Gradle Plugin 8.x requires JDK 17
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Accept Android SDK licenses (best effort)
        shell: bash
        run: |
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses || true

      # --- Keystore restore from secret (required for SIGNED builds) ---
      - name: Restore signing keystore from secrets
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        shell: bash
        run: |
          python3 - <<'PY'
          import os, base64, sys
          b64 = os.environ.get('ANDROID_KEYSTORE_BASE64','').encode()
          if not b64:
              sys.exit("ANDROID_KEYSTORE_BASE64 is empty")
          with open('signing.keystore','wb') as f:
              f.write(base64.b64decode(b64))
          print("signing.keystore written")
          PY
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      # --- Build & publish SIGNED APK (recommended for testers) ---
      - name: Publish signed APK
        shell: bash
        run: |
          mkdir -p "$PUBLISH_DIR"
          dotnet publish "$MAUI_PROJECT" \
            -f net9.0
